rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /{orgName} {
    	function isOrgMember(uid) {
      	return exists(/databases/$(database)/documents/$(orgName)/users/$(uid))
      }
    	function isOrgAdmin(uid) {
      	return exists(/databases/$(database)/documents/$(orgName)/admins/$(uid))
      }
    	function hasInvite() {
      	return request.resource.data.inviteLink == get(/databases/$(database)/documents/$(orgName)).inviteLink
      }
    	allow read, write: if false;

      match /groups/{document=**} {
      	allow read: if isOrgMember(request.auth.uid)
      }
      match /students/{document=**} {
      	allow read: if isOrgMember(request.auth.uid)
      }
      match /users/{document=**} {
      	allow read, write: if isOrgAdmin(request.auth.uid)
      	allow create: if hasInvite()
      }
    }
  }
}
